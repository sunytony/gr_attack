id: attack_modified_RAPP
label: modified_RAPP
category: '[attack]'

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
# double LinearGain, double PhaseGain, double Smoothness, double PhaseSmoothness, double OutputSL, double PhaseSaturation
parameters:
- id: LinearGain
  label: LinearGain
  dtype: float
  default: 0
- id: PhaseGain
  label: PhaseGain
  dtype: float
  default: 0
- id: Smoothness
  label: Smoothness
  dtype: float
  default: 0
- id: PhaseSmoothness
  label: PhaseSmoothness
  dtype: float
  default: 0
- id: OutputSL
  label: OutputSaturationLevel
  dtype: float
  default: 0
- id: PhaseSaturation
  label: PhaseSaturation
  dtype: float
  default: 0
#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: complex
- domain: message
  id: params
  optional: true

outputs:
- label: out
  domain: stream
  dtype: complex

templates:
  imports: import attack
  make: attack.modified_RAPP(${LinearGain},${PhaseGain},${Smoothness},${PhaseSmoothness},${OutputSL},${PhaseSaturation})


#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
